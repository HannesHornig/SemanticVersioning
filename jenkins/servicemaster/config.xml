<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>Versionen </name>
          <description>Release</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Patch</string>
              <string>Minor</string>
              <string>Major</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.18"/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>pipeline {
   agent any

   stages {
      stage(&apos;Build&apos;) {
         steps {
            // Get some code from a GitHub repository
            git &apos;https://github.com/jglick/simple-maven-project-with-tests.git&apos;

            // Run Maven on a Unix agent.
            sh &quot;mvn -Dmaven.test.failure.ignore=true clean package&quot;

            // To run Maven on a Windows agent, use
            // bat &quot;mvn -Dmaven.test.failure.ignore=true clean package&quot;
         }

         post {
            // If Maven was able to run the tests, even if some of the test
            // failed, record the test results and archive the jar file.
            success {
               junit &apos;**/target/surefire-reports/TEST-*.xml&apos;
            }
         }
      }
   }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
